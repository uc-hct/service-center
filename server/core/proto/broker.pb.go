// Code generated by protoc-gen-go. DO NOT EDIT.
// source: broker.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	broker.proto

It has these top-level messages:
	Participant
	ParticipantVersion
	BaseBrokerRequest
	PublishPactRequest
	BrokerAPIInfoEntry
	Response
	PublishPactResponse
	GetParticipantsRequest
	BrokerHomeResponse
*/
package proto

import (
	"context"
	fmt "fmt"

	proto1 "github.com/golang/protobuf/proto"

	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package
/*
type Response_Code int32

const (
	Response_UNKNOWN Response_Code = 0
	Response_SUCCESS Response_Code = 1
	Response_FAIL    Response_Code = 2
)

var Response_Code_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "FAIL",
}
var Response_Code_value = map[string]int32{
	"UNKNOWN": 0,
	"SUCCESS": 1,
	"FAIL":    2,
}

func (x Response_Code) String() string {
	return proto1.EnumName(Response_Code_name, int32(x))
}
func (Response_Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{5, 0} }
*/
type GetParticipantsRequest_ParticipantType int32

const (
	GetParticipantsRequest_ALL_PARTIES    GetParticipantsRequest_ParticipantType = 0
	GetParticipantsRequest_SINGLE_PARTY   GetParticipantsRequest_ParticipantType = 1
	GetParticipantsRequest_LATEST_PARTY   GetParticipantsRequest_ParticipantType = 2
	GetParticipantsRequest_VERSIONS_PARTY GetParticipantsRequest_ParticipantType = 3
)

var GetParticipantsRequest_ParticipantType_name = map[int32]string{
	0: "ALL_PARTIES",
	1: "SINGLE_PARTY",
	2: "LATEST_PARTY",
	3: "VERSIONS_PARTY",
}
var GetParticipantsRequest_ParticipantType_value = map[string]int32{
	"ALL_PARTIES":    0,
	"SINGLE_PARTY":   1,
	"LATEST_PARTY":   2,
	"VERSIONS_PARTY": 3,
}

func (x GetParticipantsRequest_ParticipantType) String() string {
	return proto1.EnumName(GetParticipantsRequest_ParticipantType_name, int32(x))
}
func (GetParticipantsRequest_ParticipantType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7, 0}
}

// Represents microservice in the broker system
type Participant struct {
	Id          int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AppId       string `protobuf:"bytes,2,opt,name=appId" json:"appId,omitempty"`
	ServiceName string `protobuf:"bytes,3,opt,name=serviceName" json:"serviceName,omitempty"`
}

func (m *Participant) Reset()                    { *m = Participant{} }
func (m *Participant) String() string            { return proto1.CompactTextString(m) }
func (*Participant) ProtoMessage()               {}
func (*Participant) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Participant) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Participant) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *Participant) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

// Represents version of the participant
type ParticipantVersion struct {
	Id            int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Number        string `protobuf:"bytes,2,opt,name=number" json:"number,omitempty"`
	ParticipantId int32  `protobuf:"varint,3,opt,name=participantId" json:"participantId,omitempty"`
	Order         int32  `protobuf:"varint,4,opt,name=order" json:"order,omitempty"`
}

func (m *ParticipantVersion) Reset()                    { *m = ParticipantVersion{} }
func (m *ParticipantVersion) String() string            { return proto1.CompactTextString(m) }
func (*ParticipantVersion) ProtoMessage()               {}
func (*ParticipantVersion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ParticipantVersion) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ParticipantVersion) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *ParticipantVersion) GetParticipantId() int32 {
	if m != nil {
		return m.ParticipantId
	}
	return 0
}

func (m *ParticipantVersion) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

// Holds information about the request. Needed to generate the body information
type BaseBrokerRequest struct {
	HostAddress string `protobuf:"bytes,1,opt,name=hostAddress" json:"hostAddress,omitempty"`
	Scheme      string `protobuf:"bytes,2,opt,name=scheme" json:"scheme,omitempty"`
}

func (m *BaseBrokerRequest) Reset()                    { *m = BaseBrokerRequest{} }
func (m *BaseBrokerRequest) String() string            { return proto1.CompactTextString(m) }
func (*BaseBrokerRequest) ProtoMessage()               {}
func (*BaseBrokerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BaseBrokerRequest) GetHostAddress() string {
	if m != nil {
		return m.HostAddress
	}
	return ""
}

func (m *BaseBrokerRequest) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

type PublishPactRequest struct {
	ProviderId string             `protobuf:"bytes,1,opt,name=providerId" json:"providerId,omitempty"`
	ConsumerId string             `protobuf:"bytes,2,opt,name=consumerId" json:"consumerId,omitempty"`
	Version    string             `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	Pact       []byte             `protobuf:"bytes,4,opt,name=pact,proto3" json:"pact,omitempty"`
	BaseUrl    *BaseBrokerRequest `protobuf:"bytes,5,opt,name=baseUrl" json:"baseUrl,omitempty"`
}

func (m *PublishPactRequest) Reset()                    { *m = PublishPactRequest{} }
func (m *PublishPactRequest) String() string            { return proto1.CompactTextString(m) }
func (*PublishPactRequest) ProtoMessage()               {}
func (*PublishPactRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PublishPactRequest) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *PublishPactRequest) GetConsumerId() string {
	if m != nil {
		return m.ConsumerId
	}
	return ""
}

func (m *PublishPactRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *PublishPactRequest) GetPact() []byte {
	if m != nil {
		return m.Pact
	}
	return nil
}

func (m *PublishPactRequest) GetBaseUrl() *BaseBrokerRequest {
	if m != nil {
		return m.BaseUrl
	}
	return nil
}

type BrokerAPIInfoEntry struct {
	Href      string `protobuf:"bytes,1,opt,name=href" json:"href,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Title     string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Templated bool   `protobuf:"varint,4,opt,name=templated" json:"templated,omitempty"`
}

func (m *BrokerAPIInfoEntry) Reset()                    { *m = BrokerAPIInfoEntry{} }
func (m *BrokerAPIInfoEntry) String() string            { return proto1.CompactTextString(m) }
func (*BrokerAPIInfoEntry) ProtoMessage()               {}
func (*BrokerAPIInfoEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *BrokerAPIInfoEntry) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

func (m *BrokerAPIInfoEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BrokerAPIInfoEntry) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *BrokerAPIInfoEntry) GetTemplated() bool {
	if m != nil {
		return m.Templated
	}
	return false
}

/*
type Response struct {
	Code    Response_Code `protobuf:"varint,1,opt,name=code,enum=com.huawei.paas.cse.serviceregistry.api.Response_Code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto1.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Response) GetCode() Response_Code {
	if m != nil {
		return m.Code
	}
	return Response_UNKNOWN
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}
*/
type PublishPactResponse struct {
	Response *Response `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
}

func (m *PublishPactResponse) Reset()                    { *m = PublishPactResponse{} }
func (m *PublishPactResponse) String() string            { return proto1.CompactTextString(m) }
func (*PublishPactResponse) ProtoMessage()               {}
func (*PublishPactResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PublishPactResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

type GetParticipantsRequest struct {
	BrokerInfo    *BaseBrokerRequest                     `protobuf:"bytes,1,opt,name=brokerInfo" json:"brokerInfo,omitempty"`
	PartyReqType  GetParticipantsRequest_ParticipantType `protobuf:"varint,2,opt,name=partyReqType,enum=com.huawei.paas.cse.serviceregistry.api.GetParticipantsRequest_ParticipantType" json:"partyReqType,omitempty"`
	ParticipantId string                                 `protobuf:"bytes,3,opt,name=participantId" json:"participantId,omitempty"`
}

func (m *GetParticipantsRequest) Reset()                    { *m = GetParticipantsRequest{} }
func (m *GetParticipantsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetParticipantsRequest) ProtoMessage()               {}
func (*GetParticipantsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetParticipantsRequest) GetBrokerInfo() *BaseBrokerRequest {
	if m != nil {
		return m.BrokerInfo
	}
	return nil
}

func (m *GetParticipantsRequest) GetPartyReqType() GetParticipantsRequest_ParticipantType {
	if m != nil {
		return m.PartyReqType
	}
	return GetParticipantsRequest_ALL_PARTIES
}

func (m *GetParticipantsRequest) GetParticipantId() string {
	if m != nil {
		return m.ParticipantId
	}
	return ""
}

type BrokerHomeResponse struct {
	Response *Response                      `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	XLinks   map[string]*BrokerAPIInfoEntry `protobuf:"bytes,2,rep,name=_links,json=Links" json:"_links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Curies   []*BrokerAPIInfoEntry          `protobuf:"bytes,3,rep,name=curies" json:"curies,omitempty"`
}

func (m *BrokerHomeResponse) Reset()                    { *m = BrokerHomeResponse{} }
func (m *BrokerHomeResponse) String() string            { return proto1.CompactTextString(m) }
func (*BrokerHomeResponse) ProtoMessage()               {}
func (*BrokerHomeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *BrokerHomeResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *BrokerHomeResponse) GetXLinks() map[string]*BrokerAPIInfoEntry {
	if m != nil {
		return m.XLinks
	}
	return nil
}

func (m *BrokerHomeResponse) GetCuries() []*BrokerAPIInfoEntry {
	if m != nil {
		return m.Curies
	}
	return nil
}

func init() {
	proto1.RegisterType((*Participant)(nil), "com.huawei.paas.cse.serviceregistry.api.Participant")
	proto1.RegisterType((*ParticipantVersion)(nil), "com.huawei.paas.cse.serviceregistry.api.ParticipantVersion")
	proto1.RegisterType((*BaseBrokerRequest)(nil), "com.huawei.paas.cse.serviceregistry.api.BaseBrokerRequest")
	proto1.RegisterType((*PublishPactRequest)(nil), "com.huawei.paas.cse.serviceregistry.api.PublishPactRequest")
	proto1.RegisterType((*BrokerAPIInfoEntry)(nil), "com.huawei.paas.cse.serviceregistry.api.BrokerAPIInfoEntry")
	//proto1.RegisterType((*Response)(nil), "com.huawei.paas.cse.serviceregistry.api.Response")
	proto1.RegisterType((*PublishPactResponse)(nil), "com.huawei.paas.cse.serviceregistry.api.PublishPactResponse")
	proto1.RegisterType((*GetParticipantsRequest)(nil), "com.huawei.paas.cse.serviceregistry.api.GetParticipantsRequest")
	proto1.RegisterType((*BrokerHomeResponse)(nil), "com.huawei.paas.cse.serviceregistry.api.BrokerHomeResponse")
	//proto1.RegisterEnum("com.huawei.paas.cse.serviceregistry.api.Response_Code", Response_Code_name, Response_Code_value)
	proto1.RegisterEnum("com.huawei.paas.cse.serviceregistry.api.GetParticipantsRequest_ParticipantType", GetParticipantsRequest_ParticipantType_name, GetParticipantsRequest_ParticipantType_value)
}

func init() { proto1.RegisterFile("broker.proto", fileDescriptor0) }

/*
var fileDescriptor0 = []byte{
	// 768 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0xae, 0x9d, 0x64, 0x7f, 0x8e, 0xd3, 0x34, 0x1d, 0x50, 0x65, 0xad, 0x10, 0x8a, 0x2c, 0x24,
	0x22, 0x2e, 0x2c, 0x08, 0x12, 0x42, 0x2d, 0x37, 0xd9, 0x28, 0x2d, 0x86, 0x34, 0x1b, 0xc6, 0x49,
	0x11, 0x2b, 0xa1, 0x6a, 0x62, 0x9f, 0x6e, 0xac, 0x8d, 0x7f, 0x3a, 0x33, 0x0e, 0xe4, 0x0d, 0xb8,
	0xe2, 0x09, 0x78, 0x01, 0xde, 0x88, 0x77, 0xe0, 0x25, 0xd0, 0x8c, 0xed, 0xc6, 0xdb, 0xf4, 0x22,
	0x25, 0xea, 0x55, 0xce, 0xf9, 0xc6, 0xf3, 0x9d, 0x6f, 0xbe, 0x33, 0x27, 0x03, 0xed, 0x25, 0x4f,
	0x6f, 0x91, 0xbb, 0x19, 0x4f, 0x65, 0x4a, 0x3e, 0x0f, 0xd2, 0xd8, 0x5d, 0xe5, 0xec, 0x37, 0x8c,
	0xdc, 0x8c, 0x31, 0xe1, 0x06, 0x02, 0x5d, 0x81, 0x7c, 0x13, 0x05, 0xc8, 0xf1, 0x26, 0x12, 0x92,
	0x6f, 0x5d, 0x96, 0x45, 0xce, 0x02, 0xac, 0x19, 0xe3, 0x32, 0x0a, 0xa2, 0x8c, 0x25, 0x92, 0x74,
	0xc0, 0x8c, 0x42, 0xdb, 0xe8, 0x19, 0xfd, 0x16, 0x35, 0xa3, 0x90, 0x7c, 0x0c, 0x2d, 0x96, 0x65,
	0x5e, 0x68, 0x9b, 0x3d, 0xa3, 0x7f, 0x4e, 0x8b, 0x84, 0xf4, 0xc0, 0x2a, 0xb9, 0xa6, 0x2c, 0x46,
	0xbb, 0xa1, 0xd7, 0xea, 0x90, 0xf3, 0x3b, 0x90, 0x1a, 0xed, 0x0b, 0xe4, 0x22, 0x4a, 0x93, 0x3d,
	0xf6, 0x47, 0x70, 0x92, 0xe4, 0xf1, 0x12, 0x79, 0x49, 0x5f, 0x66, 0xe4, 0x33, 0xb8, 0x9f, 0xed,
	0x76, 0x7b, 0xa1, 0xae, 0xd0, 0xa2, 0x77, 0x41, 0xa5, 0x2d, 0xe5, 0x21, 0x72, 0xbb, 0xa9, 0x57,
	0x8b, 0xc4, 0x79, 0x0e, 0x0f, 0x2f, 0x99, 0xc0, 0x4b, 0xed, 0x06, 0xc5, 0xd7, 0x39, 0x0a, 0xa9,
	0x04, 0xaf, 0x52, 0x21, 0x87, 0x61, 0xc8, 0x51, 0x08, 0xad, 0xe0, 0x9c, 0xd6, 0x21, 0x25, 0x45,
	0x04, 0x2b, 0x8c, 0xb1, 0x92, 0x52, 0x64, 0xce, 0x3f, 0x06, 0x90, 0x59, 0xbe, 0x5c, 0x47, 0x62,
	0x35, 0x63, 0x81, 0xac, 0x08, 0x3f, 0x05, 0xc8, 0x78, 0xba, 0x89, 0x42, 0xe4, 0x5e, 0x58, 0xf2,
	0xd5, 0x10, 0xb5, 0x1e, 0xa4, 0x89, 0xc8, 0x63, 0xbd, 0x5e, 0x50, 0xd6, 0x10, 0x62, 0xc3, 0xe9,
	0xa6, 0x30, 0xa5, 0x74, 0xaf, 0x4a, 0x09, 0x81, 0x66, 0xc6, 0x02, 0xa9, 0x0f, 0xd5, 0xa6, 0x3a,
	0x26, 0x73, 0x38, 0x5d, 0x32, 0x81, 0x0b, 0xbe, 0xb6, 0x5b, 0x3d, 0xa3, 0x6f, 0x0d, 0x1e, 0xbb,
	0x07, 0xf6, 0xd7, 0xdd, 0xf3, 0x82, 0x56, 0x54, 0x4e, 0x06, 0xa4, 0x58, 0x19, 0xce, 0x3c, 0x2f,
	0x79, 0x95, 0x8e, 0x13, 0xc9, 0xb7, 0xaa, 0xfe, 0x8a, 0xe3, 0xab, 0xf2, 0x4c, 0x3a, 0x56, 0x58,
	0xc2, 0xde, 0x58, 0xa3, 0x63, 0xe5, 0xbe, 0x8c, 0xe4, 0xba, 0xea, 0x7e, 0x91, 0x90, 0x4f, 0xe0,
	0x5c, 0x62, 0x9c, 0xad, 0x99, 0xc4, 0x50, 0x1f, 0xe1, 0x8c, 0xee, 0x00, 0xe7, 0x2f, 0x03, 0xce,
	0x28, 0x8a, 0x2c, 0x4d, 0x04, 0x92, 0x1f, 0xa0, 0x19, 0xa4, 0x21, 0xea, 0x42, 0x9d, 0xc1, 0x37,
	0x07, 0x9f, 0xa8, 0x22, 0x70, 0x47, 0x69, 0x88, 0x54, 0x73, 0x28, 0x3b, 0x63, 0x14, 0x82, 0xdd,
	0x54, 0x1a, 0xab, 0xd4, 0xf9, 0x02, 0x9a, 0xea, 0x3b, 0x62, 0xc1, 0xe9, 0x62, 0xfa, 0xe3, 0xf4,
	0xea, 0xe7, 0x69, 0xf7, 0x9e, 0x4a, 0xfc, 0xc5, 0x68, 0x34, 0xf6, 0xfd, 0xae, 0x41, 0xce, 0xa0,
	0xf9, 0x74, 0xe8, 0x4d, 0xba, 0xa6, 0x13, 0xc2, 0x47, 0x77, 0x5a, 0x5d, 0x0a, 0x7d, 0x0e, 0x67,
	0xbc, 0x8c, 0xb5, 0x58, 0x6b, 0xf0, 0xd5, 0x7b, 0x8b, 0xa5, 0x6f, 0x28, 0x9c, 0x7f, 0x4d, 0x78,
	0xf4, 0x0c, 0x65, 0x6d, 0x3c, 0x44, 0x75, 0xab, 0xae, 0x01, 0x8a, 0x29, 0x56, 0xed, 0x28, 0x6b,
	0x1d, 0xd3, 0xea, 0x1a, 0x1b, 0x11, 0xd0, 0x56, 0xe3, 0xb3, 0xa5, 0xf8, 0x7a, 0xbe, 0xcd, 0x0a,
	0x9f, 0x3a, 0x83, 0xab, 0x83, 0xd9, 0xdf, 0x2d, 0xd9, 0xad, 0x61, 0x8a, 0x96, 0xde, 0x29, 0xf2,
	0xee, 0x41, 0x3e, 0x7f, 0x6b, 0x90, 0x9d, 0x6b, 0x78, 0xf0, 0x16, 0x0d, 0x79, 0x00, 0xd6, 0x70,
	0x32, 0x79, 0x39, 0x1b, 0xd2, 0xb9, 0x37, 0xf6, 0xbb, 0xf7, 0x48, 0x17, 0xda, 0xbe, 0x37, 0x7d,
	0x36, 0x19, 0x6b, 0xec, 0x97, 0xae, 0xa1, 0x90, 0xc9, 0x70, 0x3e, 0xf6, 0xe7, 0x25, 0x62, 0x12,
	0x02, 0x9d, 0x17, 0x63, 0xea, 0x7b, 0x57, 0x53, 0xbf, 0xc4, 0x1a, 0xce, 0x9f, 0x8d, 0xea, 0x96,
	0x7f, 0x9f, 0xc6, 0xf8, 0x81, 0x7a, 0x4a, 0x7e, 0x85, 0x93, 0x97, 0xeb, 0x28, 0xb9, 0x15, 0xb6,
	0xd9, 0x6b, 0xf4, 0xad, 0xc1, 0xd3, 0xc3, 0x9b, 0xb6, 0xa7, 0xcd, 0x9d, 0x28, 0x22, 0x3d, 0x8c,
	0xb4, 0xa5, 0x63, 0xe2, 0xc3, 0x49, 0x90, 0xf3, 0x08, 0x85, 0xdd, 0xd0, 0xf4, 0x4f, 0xde, 0x93,
	0xbe, 0x3e, 0xe0, 0xb4, 0xa4, 0xba, 0xc8, 0x01, 0x76, 0x95, 0x48, 0x17, 0x1a, 0xb7, 0xb8, 0x2d,
	0xa7, 0x5e, 0x85, 0xe4, 0x27, 0x68, 0x6d, 0xd8, 0x3a, 0x2f, 0x6e, 0xca, 0x91, 0x35, 0x0b, 0xa6,
	0xc7, 0xe6, 0xb7, 0xc6, 0xe0, 0x6f, 0x13, 0x1e, 0x16, 0x5f, 0xf8, 0xc5, 0xde, 0x91, 0xe4, 0x6b,
	0xf2, 0x87, 0x01, 0xf7, 0x6f, 0x50, 0xee, 0xdc, 0x20, 0x47, 0xdc, 0xfb, 0x8b, 0x27, 0x47, 0xd8,
	0xaf, 0xa4, 0x58, 0xd9, 0xee, 0x6f, 0x80, 0x1c, 0x4e, 0xb6, 0xff, 0x4e, 0x5c, 0x7c, 0xf7, 0xff,
	0x36, 0x17, 0x52, 0x2e, 0xbf, 0x84, 0x43, 0xdf, 0xf1, 0xeb, 0x96, 0x7e, 0xf7, 0x97, 0x27, 0xfa,
	0xe7, 0xeb, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x85, 0x68, 0x92, 0xfc, 0x0e, 0x08, 0x00, 0x00,
}
*/

type BrokerServiceCtrlServer interface {
	GetBrokerHome(context.Context, *BaseBrokerRequest) (*BrokerHomeResponse, error)
	PublishPact(context.Context, *PublishPactRequest) (*PublishPactResponse, error)
}
