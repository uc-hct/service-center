syntax = "proto3";

package com.huawei.paas.cse.serviceregistry.api;

option go_package = "proto";
option java_package = "com.huawei.paas.cse.serviceregistry.api";

/*
Definitions of Services
*/

service BrokerServiceCtrl {
		rpc publishPact (PublishPactRequest) returns (PublishPactResponse);
		rpc getParticipant (GetParticipantsRequest) returns (GetParticipantResponse);
		rpc getParticipants (GetParticipantsRequest) returns (GetParticipantsResponse);
		rpc getParticipantVersions (GetParticipantsRequest) returns (GetParticipantVersionsResponse);
}



/*
Definitions of entry objects
*/

message Participant {
	int32 id = 1;
	string appId = 2;
	string serviceName = 3;
}

message ParticipantVersion {
	int32 id = 1;
	string number = 2;
	int32 participantId = 3;
	int32 order = 4;
}

message Pact {
	int32 id = 1;
	int32 consumerParticipantId = 2;
	int32 providerParticipantId = 3;
	bytes sha = 4;
	bytes content = 5;
}

message PactPublication {
	int32 id = 1;
	int32 participantVersionId = 2;
	int32 pactId = 3;
	int32 participantId = 4;
}

message Tag {
	string name = 1;
	int32 participantVersionId = 2;
}


/*
Definitions of communication format
*/

message PublishPactRequest {
  string providerId = 1;
  string consumerId = 2;
  string version = 3;
  bytes pact = 4;
}

message GetParticipantsRequest {
	enum ParticipantType {
			ALL_PARTIES = 0;
			SINGLE_PARTY = 1;
			LATEST_PARTY = 2;
			VERSIONS_PARTY = 3;
	}
	ParticipantType partyReqType = 1;
  string participantId = 2;
  string urlPrefix = 3;
}

message Response {
  enum Code {
      UNKNOWN = 0;
      SUCCESS = 1;
      FAIL = 2;
  }
  Code code = 1;
  string message = 2;
}

message PublishPactResponse {
  Response response = 1;
}


message GetAllProviderPactsRequest {
	string providerId = 1;
}

message ConsumerInfo {
	string href = 1;
	string name = 2;
}

message Links {
	repeated ConsumerInfo pacts = 1;
}


message ParticipantResponse {
	string name = 1;
	Links _links = 2;
}


message GetParticipantResponse {
	Response response = 1;
	ParticipantResponse participantInfo = 2;
}

message GetParticipantsResponse {
	Response response = 1;
	repeated ParticipantResponse participants = 2;
}

message GetParticipantVersionsResponse {
	Response response = 1;
}

message GetAllProviderPactsReponse {
	Response response = 1;
	Links _links = 2;
}

message GetProviderConsumerVersionPactRequest {
	string providerId = 1;
	string consumerId = 2;
	string version = 3;
}

message GetProviderConsumerVersionPactResponse {
	Response response = 1;
	bytes pact = 2;
}


message BrokerAPIEntryContent {
	string href = 1;
	string title = 2;
	bool templated = 3;
}

message BrokerAPICuriesEntry {
	string name = 1;
	string href = 2;
	bool templated = 3;
}

message BrokerHomeResponse {
	Response response = 1;
	map<string, BrokerAPIEntryContent> _links = 2;
	repeated BrokerAPICuriesEntry curies = 3;
}
