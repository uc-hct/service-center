// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pacts.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	pacts.proto

It has these top-level messages:
	Participant
	ParticipantVersion
	Pact
	PactPublication
	Tag
	BrokerAPIInfoEntry
	BaseBrokerRequest
	PublishPactRequest
	GetParticipantsRequest
	Response
	PublishPactResponse
	GetAllProviderPactsRequest
	ConsumerInfo
	Links
	BrokerPartyVersionResponse
	BrokerPartyEmbeddedVersions
	ParticipantResponse
	ParticipantsSummaryLinks
	GetParticipantResponse
	GetParticipantsResponse
	GetParticipantVersionsResponse
	GetAllProviderPactsReponse
	GetProviderConsumerVersionPactRequest
	GetProviderConsumerVersionPactResponse
	BrokerHomeResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type GetParticipantsRequest_ParticipantType int32

const (
	GetParticipantsRequest_ALL_PARTIES    GetParticipantsRequest_ParticipantType = 0
	GetParticipantsRequest_SINGLE_PARTY   GetParticipantsRequest_ParticipantType = 1
	GetParticipantsRequest_LATEST_PARTY   GetParticipantsRequest_ParticipantType = 2
	GetParticipantsRequest_VERSIONS_PARTY GetParticipantsRequest_ParticipantType = 3
)

var GetParticipantsRequest_ParticipantType_name = map[int32]string{
	0: "ALL_PARTIES",
	1: "SINGLE_PARTY",
	2: "LATEST_PARTY",
	3: "VERSIONS_PARTY",
}
var GetParticipantsRequest_ParticipantType_value = map[string]int32{
	"ALL_PARTIES":    0,
	"SINGLE_PARTY":   1,
	"LATEST_PARTY":   2,
	"VERSIONS_PARTY": 3,
}

func (x GetParticipantsRequest_ParticipantType) String() string {
	return proto1.EnumName(GetParticipantsRequest_ParticipantType_name, int32(x))
}
func (GetParticipantsRequest_ParticipantType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8, 0}
}

/*
type Response_Code int32

const (
	Response_UNKNOWN Response_Code = 0
	Response_SUCCESS Response_Code = 1
	Response_FAIL    Response_Code = 2
)

var Response_Code_name = map[int32]string{
	0: "UNKNOWN",
	1: "SUCCESS",
	2: "FAIL",
}
var Response_Code_value = map[string]int32{
	"UNKNOWN": 0,
	"SUCCESS": 1,
	"FAIL":    2,
}

func (x Response_Code) String() string {
	return proto1.EnumName(Response_Code_name, int32(x))
}
func (Response_Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{9, 0} }
*/
type Participant struct {
	Id          int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AppId       string `protobuf:"bytes,2,opt,name=appId" json:"appId,omitempty"`
	ServiceName string `protobuf:"bytes,3,opt,name=serviceName" json:"serviceName,omitempty"`
}

func (m *Participant) Reset()                    { *m = Participant{} }
func (m *Participant) String() string            { return proto1.CompactTextString(m) }
func (*Participant) ProtoMessage()               {}
func (*Participant) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Participant) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Participant) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

func (m *Participant) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type ParticipantVersion struct {
	Id            int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Number        string `protobuf:"bytes,2,opt,name=number" json:"number,omitempty"`
	ParticipantId int32  `protobuf:"varint,3,opt,name=participantId" json:"participantId,omitempty"`
	Order         int32  `protobuf:"varint,4,opt,name=order" json:"order,omitempty"`
}

func (m *ParticipantVersion) Reset()                    { *m = ParticipantVersion{} }
func (m *ParticipantVersion) String() string            { return proto1.CompactTextString(m) }
func (*ParticipantVersion) ProtoMessage()               {}
func (*ParticipantVersion) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ParticipantVersion) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ParticipantVersion) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *ParticipantVersion) GetParticipantId() int32 {
	if m != nil {
		return m.ParticipantId
	}
	return 0
}

func (m *ParticipantVersion) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

type Pact struct {
	Id                    int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ConsumerParticipantId int32  `protobuf:"varint,2,opt,name=consumerParticipantId" json:"consumerParticipantId,omitempty"`
	ProviderParticipantId int32  `protobuf:"varint,3,opt,name=providerParticipantId" json:"providerParticipantId,omitempty"`
	Sha                   []byte `protobuf:"bytes,4,opt,name=sha,proto3" json:"sha,omitempty"`
	Content               []byte `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *Pact) Reset()                    { *m = Pact{} }
func (m *Pact) String() string            { return proto1.CompactTextString(m) }
func (*Pact) ProtoMessage()               {}
func (*Pact) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Pact) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Pact) GetConsumerParticipantId() int32 {
	if m != nil {
		return m.ConsumerParticipantId
	}
	return 0
}

func (m *Pact) GetProviderParticipantId() int32 {
	if m != nil {
		return m.ProviderParticipantId
	}
	return 0
}

func (m *Pact) GetSha() []byte {
	if m != nil {
		return m.Sha
	}
	return nil
}

func (m *Pact) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type PactPublication struct {
	Id                   int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	ParticipantVersionId int32 `protobuf:"varint,2,opt,name=participantVersionId" json:"participantVersionId,omitempty"`
	PactId               int32 `protobuf:"varint,3,opt,name=pactId" json:"pactId,omitempty"`
	ParticipantId        int32 `protobuf:"varint,4,opt,name=participantId" json:"participantId,omitempty"`
}

func (m *PactPublication) Reset()                    { *m = PactPublication{} }
func (m *PactPublication) String() string            { return proto1.CompactTextString(m) }
func (*PactPublication) ProtoMessage()               {}
func (*PactPublication) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PactPublication) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PactPublication) GetParticipantVersionId() int32 {
	if m != nil {
		return m.ParticipantVersionId
	}
	return 0
}

func (m *PactPublication) GetPactId() int32 {
	if m != nil {
		return m.PactId
	}
	return 0
}

func (m *PactPublication) GetParticipantId() int32 {
	if m != nil {
		return m.ParticipantId
	}
	return 0
}

type Tag struct {
	Name                 string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ParticipantVersionId int32  `protobuf:"varint,2,opt,name=participantVersionId" json:"participantVersionId,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto1.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Tag) GetParticipantVersionId() int32 {
	if m != nil {
		return m.ParticipantVersionId
	}
	return 0
}

type BrokerAPIInfoEntry struct {
	Href      string `protobuf:"bytes,1,opt,name=href" json:"href,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Title     string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Templated bool   `protobuf:"varint,4,opt,name=templated" json:"templated,omitempty"`
}

func (m *BrokerAPIInfoEntry) Reset()                    { *m = BrokerAPIInfoEntry{} }
func (m *BrokerAPIInfoEntry) String() string            { return proto1.CompactTextString(m) }
func (*BrokerAPIInfoEntry) ProtoMessage()               {}
func (*BrokerAPIInfoEntry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *BrokerAPIInfoEntry) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

func (m *BrokerAPIInfoEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BrokerAPIInfoEntry) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *BrokerAPIInfoEntry) GetTemplated() bool {
	if m != nil {
		return m.Templated
	}
	return false
}

type BaseBrokerRequest struct {
	HostAddress string `protobuf:"bytes,1,opt,name=hostAddress" json:"hostAddress,omitempty"`
	Scheme      string `protobuf:"bytes,2,opt,name=scheme" json:"scheme,omitempty"`
}

func (m *BaseBrokerRequest) Reset()                    { *m = BaseBrokerRequest{} }
func (m *BaseBrokerRequest) String() string            { return proto1.CompactTextString(m) }
func (*BaseBrokerRequest) ProtoMessage()               {}
func (*BaseBrokerRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *BaseBrokerRequest) GetHostAddress() string {
	if m != nil {
		return m.HostAddress
	}
	return ""
}

func (m *BaseBrokerRequest) GetScheme() string {
	if m != nil {
		return m.Scheme
	}
	return ""
}

type PublishPactRequest struct {
	ProviderId string             `protobuf:"bytes,1,opt,name=providerId" json:"providerId,omitempty"`
	ConsumerId string             `protobuf:"bytes,2,opt,name=consumerId" json:"consumerId,omitempty"`
	Version    string             `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
	Pact       []byte             `protobuf:"bytes,4,opt,name=pact,proto3" json:"pact,omitempty"`
	BaseUrl    *BaseBrokerRequest `protobuf:"bytes,5,opt,name=baseUrl" json:"baseUrl,omitempty"`
}

func (m *PublishPactRequest) Reset()                    { *m = PublishPactRequest{} }
func (m *PublishPactRequest) String() string            { return proto1.CompactTextString(m) }
func (*PublishPactRequest) ProtoMessage()               {}
func (*PublishPactRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *PublishPactRequest) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *PublishPactRequest) GetConsumerId() string {
	if m != nil {
		return m.ConsumerId
	}
	return ""
}

func (m *PublishPactRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *PublishPactRequest) GetPact() []byte {
	if m != nil {
		return m.Pact
	}
	return nil
}

func (m *PublishPactRequest) GetBaseUrl() *BaseBrokerRequest {
	if m != nil {
		return m.BaseUrl
	}
	return nil
}

type GetParticipantsRequest struct {
	PartyReqType  GetParticipantsRequest_ParticipantType `protobuf:"varint,1,opt,name=partyReqType,enum=com.huawei.paas.cse.serviceregistry.api.GetParticipantsRequest_ParticipantType" json:"partyReqType,omitempty"`
	ParticipantId string                                 `protobuf:"bytes,2,opt,name=participantId" json:"participantId,omitempty"`
	BrokerInfo    *BaseBrokerRequest                     `protobuf:"bytes,3,opt,name=brokerInfo" json:"brokerInfo,omitempty"`
}

func (m *GetParticipantsRequest) Reset()                    { *m = GetParticipantsRequest{} }
func (m *GetParticipantsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetParticipantsRequest) ProtoMessage()               {}
func (*GetParticipantsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetParticipantsRequest) GetPartyReqType() GetParticipantsRequest_ParticipantType {
	if m != nil {
		return m.PartyReqType
	}
	return GetParticipantsRequest_ALL_PARTIES
}

func (m *GetParticipantsRequest) GetParticipantId() string {
	if m != nil {
		return m.ParticipantId
	}
	return ""
}

func (m *GetParticipantsRequest) GetBrokerInfo() *BaseBrokerRequest {
	if m != nil {
		return m.BrokerInfo
	}
	return nil
}

/*
type Response struct {
	Code    Response_Code `protobuf:"varint,1,opt,name=code,enum=com.huawei.paas.cse.serviceregistry.api.Response_Code" json:"code,omitempty"`
	Message string        `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto1.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *Response) GetCode() Response_Code {
	if m != nil {
		return m.Code
	}
	return Response_UNKNOWN
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}
*/
type PublishPactResponse struct {
	Response *Response `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
}

func (m *PublishPactResponse) Reset()                    { *m = PublishPactResponse{} }
func (m *PublishPactResponse) String() string            { return proto1.CompactTextString(m) }
func (*PublishPactResponse) ProtoMessage()               {}
func (*PublishPactResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *PublishPactResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

type GetAllProviderPactsRequest struct {
	ProviderId string `protobuf:"bytes,1,opt,name=providerId" json:"providerId,omitempty"`
}

func (m *GetAllProviderPactsRequest) Reset()                    { *m = GetAllProviderPactsRequest{} }
func (m *GetAllProviderPactsRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetAllProviderPactsRequest) ProtoMessage()               {}
func (*GetAllProviderPactsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *GetAllProviderPactsRequest) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

type ConsumerInfo struct {
	Href string `protobuf:"bytes,1,opt,name=href" json:"href,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *ConsumerInfo) Reset()                    { *m = ConsumerInfo{} }
func (m *ConsumerInfo) String() string            { return proto1.CompactTextString(m) }
func (*ConsumerInfo) ProtoMessage()               {}
func (*ConsumerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ConsumerInfo) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

func (m *ConsumerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Links struct {
	Pacts []*ConsumerInfo `protobuf:"bytes,1,rep,name=pacts" json:"pacts,omitempty"`
}

func (m *Links) Reset()                    { *m = Links{} }
func (m *Links) String() string            { return proto1.CompactTextString(m) }
func (*Links) ProtoMessage()               {}
func (*Links) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *Links) GetPacts() []*ConsumerInfo {
	if m != nil {
		return m.Pacts
	}
	return nil
}

type BrokerPartyVersionResponse struct {
	Number string                         `protobuf:"bytes,1,opt,name=number" json:"number,omitempty"`
	XLinks map[string]*BrokerAPIInfoEntry `protobuf:"bytes,2,rep,name=_links,json=Links" json:"_links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BrokerPartyVersionResponse) Reset()                    { *m = BrokerPartyVersionResponse{} }
func (m *BrokerPartyVersionResponse) String() string            { return proto1.CompactTextString(m) }
func (*BrokerPartyVersionResponse) ProtoMessage()               {}
func (*BrokerPartyVersionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *BrokerPartyVersionResponse) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *BrokerPartyVersionResponse) GetXLinks() map[string]*BrokerAPIInfoEntry {
	if m != nil {
		return m.XLinks
	}
	return nil
}

type BrokerPartyEmbeddedVersions struct {
	Versions []*BrokerPartyVersionResponse `protobuf:"bytes,1,rep,name=versions" json:"versions,omitempty"`
}

func (m *BrokerPartyEmbeddedVersions) Reset()                    { *m = BrokerPartyEmbeddedVersions{} }
func (m *BrokerPartyEmbeddedVersions) String() string            { return proto1.CompactTextString(m) }
func (*BrokerPartyEmbeddedVersions) ProtoMessage()               {}
func (*BrokerPartyEmbeddedVersions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *BrokerPartyEmbeddedVersions) GetVersions() []*BrokerPartyVersionResponse {
	if m != nil {
		return m.Versions
	}
	return nil
}

type ParticipantResponse struct {
	Name      string                                 `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	XLinks    map[string]*BrokerAPIInfoEntry         `protobuf:"bytes,2,rep,name=_links,json=Links" json:"_links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XEmbedded map[string]*BrokerPartyVersionResponse `protobuf:"bytes,3,rep,name=_embedded,json=Embedded" json:"_embedded,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ParticipantResponse) Reset()                    { *m = ParticipantResponse{} }
func (m *ParticipantResponse) String() string            { return proto1.CompactTextString(m) }
func (*ParticipantResponse) ProtoMessage()               {}
func (*ParticipantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ParticipantResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ParticipantResponse) GetXLinks() map[string]*BrokerAPIInfoEntry {
	if m != nil {
		return m.XLinks
	}
	return nil
}

func (m *ParticipantResponse) GetXEmbedded() map[string]*BrokerPartyVersionResponse {
	if m != nil {
		return m.XEmbedded
	}
	return nil
}

type ParticipantsSummaryLinks struct {
	Self         *BrokerAPIInfoEntry   `protobuf:"bytes,1,opt,name=self" json:"self,omitempty"`
	Participants []*BrokerAPIInfoEntry `protobuf:"bytes,2,rep,name=participants" json:"participants,omitempty"`
}

func (m *ParticipantsSummaryLinks) Reset()                    { *m = ParticipantsSummaryLinks{} }
func (m *ParticipantsSummaryLinks) String() string            { return proto1.CompactTextString(m) }
func (*ParticipantsSummaryLinks) ProtoMessage()               {}
func (*ParticipantsSummaryLinks) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ParticipantsSummaryLinks) GetSelf() *BrokerAPIInfoEntry {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *ParticipantsSummaryLinks) GetParticipants() []*BrokerAPIInfoEntry {
	if m != nil {
		return m.Participants
	}
	return nil
}

type GetParticipantResponse struct {
	Response        *Response            `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	ParticipantInfo *ParticipantResponse `protobuf:"bytes,2,opt,name=participantInfo" json:"participantInfo,omitempty"`
}

func (m *GetParticipantResponse) Reset()                    { *m = GetParticipantResponse{} }
func (m *GetParticipantResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetParticipantResponse) ProtoMessage()               {}
func (*GetParticipantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *GetParticipantResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *GetParticipantResponse) GetParticipantInfo() *ParticipantResponse {
	if m != nil {
		return m.ParticipantInfo
	}
	return nil
}

type GetParticipantsResponse struct {
	Response     *Response                 `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	Participants []*ParticipantResponse    `protobuf:"bytes,2,rep,name=participants" json:"participants,omitempty"`
	XLinks       *ParticipantsSummaryLinks `protobuf:"bytes,3,opt,name=_links,json=Links" json:"_links,omitempty"`
}

func (m *GetParticipantsResponse) Reset()                    { *m = GetParticipantsResponse{} }
func (m *GetParticipantsResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetParticipantsResponse) ProtoMessage()               {}
func (*GetParticipantsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *GetParticipantsResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *GetParticipantsResponse) GetParticipants() []*ParticipantResponse {
	if m != nil {
		return m.Participants
	}
	return nil
}

func (m *GetParticipantsResponse) GetXLinks() *ParticipantsSummaryLinks {
	if m != nil {
		return m.XLinks
	}
	return nil
}

type GetParticipantVersionsResponse struct {
	Response  *Response                      `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	XEmbedded *BrokerPartyEmbeddedVersions   `protobuf:"bytes,2,opt,name=_embedded,json=Embedded" json:"_embedded,omitempty"`
	XLinks    map[string]*BrokerAPIInfoEntry `protobuf:"bytes,3,rep,name=_links,json=Links" json:"_links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *GetParticipantVersionsResponse) Reset()                    { *m = GetParticipantVersionsResponse{} }
func (m *GetParticipantVersionsResponse) String() string            { return proto1.CompactTextString(m) }
func (*GetParticipantVersionsResponse) ProtoMessage()               {}
func (*GetParticipantVersionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *GetParticipantVersionsResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *GetParticipantVersionsResponse) GetXEmbedded() *BrokerPartyEmbeddedVersions {
	if m != nil {
		return m.XEmbedded
	}
	return nil
}

func (m *GetParticipantVersionsResponse) GetXLinks() map[string]*BrokerAPIInfoEntry {
	if m != nil {
		return m.XLinks
	}
	return nil
}

type GetAllProviderPactsReponse struct {
	Response *Response `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	XLinks   *Links    `protobuf:"bytes,2,opt,name=_links,json=Links" json:"_links,omitempty"`
}

func (m *GetAllProviderPactsReponse) Reset()                    { *m = GetAllProviderPactsReponse{} }
func (m *GetAllProviderPactsReponse) String() string            { return proto1.CompactTextString(m) }
func (*GetAllProviderPactsReponse) ProtoMessage()               {}
func (*GetAllProviderPactsReponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *GetAllProviderPactsReponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *GetAllProviderPactsReponse) GetXLinks() *Links {
	if m != nil {
		return m.XLinks
	}
	return nil
}

type GetProviderConsumerVersionPactRequest struct {
	ProviderId string `protobuf:"bytes,1,opt,name=providerId" json:"providerId,omitempty"`
	ConsumerId string `protobuf:"bytes,2,opt,name=consumerId" json:"consumerId,omitempty"`
	Version    string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
}

func (m *GetProviderConsumerVersionPactRequest) Reset()         { *m = GetProviderConsumerVersionPactRequest{} }
func (m *GetProviderConsumerVersionPactRequest) String() string { return proto1.CompactTextString(m) }
func (*GetProviderConsumerVersionPactRequest) ProtoMessage()    {}
func (*GetProviderConsumerVersionPactRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{22}
}

func (m *GetProviderConsumerVersionPactRequest) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *GetProviderConsumerVersionPactRequest) GetConsumerId() string {
	if m != nil {
		return m.ConsumerId
	}
	return ""
}

func (m *GetProviderConsumerVersionPactRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type GetProviderConsumerVersionPactResponse struct {
	Response *Response `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	Pact     []byte    `protobuf:"bytes,2,opt,name=pact,proto3" json:"pact,omitempty"`
}

func (m *GetProviderConsumerVersionPactResponse) Reset() {
	*m = GetProviderConsumerVersionPactResponse{}
}
func (m *GetProviderConsumerVersionPactResponse) String() string { return proto1.CompactTextString(m) }
func (*GetProviderConsumerVersionPactResponse) ProtoMessage()    {}
func (*GetProviderConsumerVersionPactResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{23}
}

func (m *GetProviderConsumerVersionPactResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *GetProviderConsumerVersionPactResponse) GetPact() []byte {
	if m != nil {
		return m.Pact
	}
	return nil
}

type BrokerHomeResponse struct {
	Response *Response                      `protobuf:"bytes,1,opt,name=response" json:"response,omitempty"`
	XLinks   map[string]*BrokerAPIInfoEntry `protobuf:"bytes,2,rep,name=_links,json=Links" json:"_links,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Curies   []*BrokerAPIInfoEntry          `protobuf:"bytes,3,rep,name=curies" json:"curies,omitempty"`
}

func (m *BrokerHomeResponse) Reset()                    { *m = BrokerHomeResponse{} }
func (m *BrokerHomeResponse) String() string            { return proto1.CompactTextString(m) }
func (*BrokerHomeResponse) ProtoMessage()               {}
func (*BrokerHomeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *BrokerHomeResponse) GetResponse() *Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *BrokerHomeResponse) GetXLinks() map[string]*BrokerAPIInfoEntry {
	if m != nil {
		return m.XLinks
	}
	return nil
}

func (m *BrokerHomeResponse) GetCuries() []*BrokerAPIInfoEntry {
	if m != nil {
		return m.Curies
	}
	return nil
}

func init() {
	proto1.RegisterType((*Participant)(nil), "com.huawei.paas.cse.serviceregistry.api.Participant")
	proto1.RegisterType((*ParticipantVersion)(nil), "com.huawei.paas.cse.serviceregistry.api.ParticipantVersion")
	proto1.RegisterType((*Pact)(nil), "com.huawei.paas.cse.serviceregistry.api.Pact")
	proto1.RegisterType((*PactPublication)(nil), "com.huawei.paas.cse.serviceregistry.api.PactPublication")
	proto1.RegisterType((*Tag)(nil), "com.huawei.paas.cse.serviceregistry.api.Tag")
	proto1.RegisterType((*BrokerAPIInfoEntry)(nil), "com.huawei.paas.cse.serviceregistry.api.BrokerAPIInfoEntry")
	proto1.RegisterType((*BaseBrokerRequest)(nil), "com.huawei.paas.cse.serviceregistry.api.BaseBrokerRequest")
	proto1.RegisterType((*PublishPactRequest)(nil), "com.huawei.paas.cse.serviceregistry.api.PublishPactRequest")
	proto1.RegisterType((*GetParticipantsRequest)(nil), "com.huawei.paas.cse.serviceregistry.api.GetParticipantsRequest")
	//	proto1.RegisterType((*Response)(nil), "com.huawei.paas.cse.serviceregistry.api.Response")
	proto1.RegisterType((*PublishPactResponse)(nil), "com.huawei.paas.cse.serviceregistry.api.PublishPactResponse")
	proto1.RegisterType((*GetAllProviderPactsRequest)(nil), "com.huawei.paas.cse.serviceregistry.api.GetAllProviderPactsRequest")
	proto1.RegisterType((*ConsumerInfo)(nil), "com.huawei.paas.cse.serviceregistry.api.ConsumerInfo")
	proto1.RegisterType((*Links)(nil), "com.huawei.paas.cse.serviceregistry.api.Links")
	proto1.RegisterType((*BrokerPartyVersionResponse)(nil), "com.huawei.paas.cse.serviceregistry.api.BrokerPartyVersionResponse")
	proto1.RegisterType((*BrokerPartyEmbeddedVersions)(nil), "com.huawei.paas.cse.serviceregistry.api.BrokerPartyEmbeddedVersions")
	proto1.RegisterType((*ParticipantResponse)(nil), "com.huawei.paas.cse.serviceregistry.api.ParticipantResponse")
	proto1.RegisterType((*ParticipantsSummaryLinks)(nil), "com.huawei.paas.cse.serviceregistry.api.ParticipantsSummaryLinks")
	proto1.RegisterType((*GetParticipantResponse)(nil), "com.huawei.paas.cse.serviceregistry.api.GetParticipantResponse")
	proto1.RegisterType((*GetParticipantsResponse)(nil), "com.huawei.paas.cse.serviceregistry.api.GetParticipantsResponse")
	proto1.RegisterType((*GetParticipantVersionsResponse)(nil), "com.huawei.paas.cse.serviceregistry.api.GetParticipantVersionsResponse")
	proto1.RegisterType((*GetAllProviderPactsReponse)(nil), "com.huawei.paas.cse.serviceregistry.api.GetAllProviderPactsReponse")
	proto1.RegisterType((*GetProviderConsumerVersionPactRequest)(nil), "com.huawei.paas.cse.serviceregistry.api.GetProviderConsumerVersionPactRequest")
	proto1.RegisterType((*GetProviderConsumerVersionPactResponse)(nil), "com.huawei.paas.cse.serviceregistry.api.GetProviderConsumerVersionPactResponse")
	proto1.RegisterType((*BrokerHomeResponse)(nil), "com.huawei.paas.cse.serviceregistry.api.BrokerHomeResponse")
	proto1.RegisterEnum("com.huawei.paas.cse.serviceregistry.api.GetParticipantsRequest_ParticipantType", GetParticipantsRequest_ParticipantType_name, GetParticipantsRequest_ParticipantType_value)
	//proto1.RegisterEnum("com.huawei.paas.cse.serviceregistry.api.Response_Code", Response_Code_name, Response_Code_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BrokerServiceCtrl service

type BrokerServiceCtrlClient interface {
	GetBrokerHome(ctx context.Context, in *BaseBrokerRequest, opts ...grpc.CallOption) (*BrokerHomeResponse, error)
	PublishPact(ctx context.Context, in *PublishPactRequest, opts ...grpc.CallOption) (*PublishPactResponse, error)
	GetParticipant(ctx context.Context, in *GetParticipantsRequest, opts ...grpc.CallOption) (*GetParticipantResponse, error)
	GetParticipants(ctx context.Context, in *GetParticipantsRequest, opts ...grpc.CallOption) (*GetParticipantsResponse, error)
	GetParticipantVersions(ctx context.Context, in *GetParticipantsRequest, opts ...grpc.CallOption) (*GetParticipantVersionsResponse, error)
}

type brokerServiceCtrlClient struct {
	cc *grpc.ClientConn
}

func NewBrokerServiceCtrlClient(cc *grpc.ClientConn) BrokerServiceCtrlClient {
	return &brokerServiceCtrlClient{cc}
}

func (c *brokerServiceCtrlClient) GetBrokerHome(ctx context.Context, in *BaseBrokerRequest, opts ...grpc.CallOption) (*BrokerHomeResponse, error) {
	out := new(BrokerHomeResponse)
	err := grpc.Invoke(ctx, "/com.huawei.paas.cse.serviceregistry.api.BrokerServiceCtrl/getBrokerHome", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceCtrlClient) PublishPact(ctx context.Context, in *PublishPactRequest, opts ...grpc.CallOption) (*PublishPactResponse, error) {
	out := new(PublishPactResponse)
	err := grpc.Invoke(ctx, "/com.huawei.paas.cse.serviceregistry.api.BrokerServiceCtrl/publishPact", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceCtrlClient) GetParticipant(ctx context.Context, in *GetParticipantsRequest, opts ...grpc.CallOption) (*GetParticipantResponse, error) {
	out := new(GetParticipantResponse)
	err := grpc.Invoke(ctx, "/com.huawei.paas.cse.serviceregistry.api.BrokerServiceCtrl/getParticipant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceCtrlClient) GetParticipants(ctx context.Context, in *GetParticipantsRequest, opts ...grpc.CallOption) (*GetParticipantsResponse, error) {
	out := new(GetParticipantsResponse)
	err := grpc.Invoke(ctx, "/com.huawei.paas.cse.serviceregistry.api.BrokerServiceCtrl/getParticipants", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brokerServiceCtrlClient) GetParticipantVersions(ctx context.Context, in *GetParticipantsRequest, opts ...grpc.CallOption) (*GetParticipantVersionsResponse, error) {
	out := new(GetParticipantVersionsResponse)
	err := grpc.Invoke(ctx, "/com.huawei.paas.cse.serviceregistry.api.BrokerServiceCtrl/getParticipantVersions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for BrokerServiceCtrl service

type BrokerServiceCtrlServer interface {
	GetBrokerHome(context.Context, *BaseBrokerRequest) (*BrokerHomeResponse, error)
	PublishPact(context.Context, *PublishPactRequest) (*PublishPactResponse, error)
	GetParticipant(context.Context, *GetParticipantsRequest) (*GetParticipantResponse, error)
	GetParticipants(context.Context, *GetParticipantsRequest) (*GetParticipantsResponse, error)
	GetParticipantVersions(context.Context, *GetParticipantsRequest) (*GetParticipantVersionsResponse, error)
}

func RegisterBrokerServiceCtrlServer(s *grpc.Server, srv BrokerServiceCtrlServer) {
	s.RegisterService(&_BrokerServiceCtrl_serviceDesc, srv)
}

func _BrokerServiceCtrl_GetBrokerHome_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BaseBrokerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceCtrlServer).GetBrokerHome(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.huawei.paas.cse.serviceregistry.api.BrokerServiceCtrl/GetBrokerHome",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceCtrlServer).GetBrokerHome(ctx, req.(*BaseBrokerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerServiceCtrl_PublishPact_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishPactRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceCtrlServer).PublishPact(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.huawei.paas.cse.serviceregistry.api.BrokerServiceCtrl/PublishPact",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceCtrlServer).PublishPact(ctx, req.(*PublishPactRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerServiceCtrl_GetParticipant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParticipantsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceCtrlServer).GetParticipant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.huawei.paas.cse.serviceregistry.api.BrokerServiceCtrl/GetParticipant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceCtrlServer).GetParticipant(ctx, req.(*GetParticipantsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerServiceCtrl_GetParticipants_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParticipantsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceCtrlServer).GetParticipants(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.huawei.paas.cse.serviceregistry.api.BrokerServiceCtrl/GetParticipants",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceCtrlServer).GetParticipants(ctx, req.(*GetParticipantsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BrokerServiceCtrl_GetParticipantVersions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParticipantsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrokerServiceCtrlServer).GetParticipantVersions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.huawei.paas.cse.serviceregistry.api.BrokerServiceCtrl/GetParticipantVersions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrokerServiceCtrlServer).GetParticipantVersions(ctx, req.(*GetParticipantsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BrokerServiceCtrl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.huawei.paas.cse.serviceregistry.api.BrokerServiceCtrl",
	HandlerType: (*BrokerServiceCtrlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getBrokerHome",
			Handler:    _BrokerServiceCtrl_GetBrokerHome_Handler,
		},
		{
			MethodName: "publishPact",
			Handler:    _BrokerServiceCtrl_PublishPact_Handler,
		},
		{
			MethodName: "getParticipant",
			Handler:    _BrokerServiceCtrl_GetParticipant_Handler,
		},
		{
			MethodName: "getParticipants",
			Handler:    _BrokerServiceCtrl_GetParticipants_Handler,
		},
		{
			MethodName: "getParticipantVersions",
			Handler:    _BrokerServiceCtrl_GetParticipantVersions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pacts.proto",
}

func init() { proto1.RegisterFile("pacts.proto", fileDescriptor0) }

/*
var fileDescriptor0 = []byte{
	// 1299 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xcf, 0x8f, 0xdb, 0x44,
	0x14, 0xae, 0x9d, 0x64, 0x9b, 0xbe, 0x6c, 0x77, 0xd3, 0x69, 0x29, 0x51, 0x40, 0xd5, 0x6a, 0xc4,
	0x8f, 0x8a, 0x83, 0x05, 0x01, 0x2a, 0xd4, 0xae, 0x04, 0xd9, 0x90, 0x2e, 0x69, 0xb3, 0xd9, 0xe0,
	0x64, 0x0b, 0x5d, 0x09, 0x16, 0xc7, 0x9e, 0x4d, 0xac, 0x4d, 0x6c, 0xd7, 0xe3, 0x2c, 0xe4, 0x82,
	0xe0, 0x86, 0x84, 0xc4, 0xa1, 0x70, 0xe4, 0x84, 0x38, 0x73, 0x40, 0xfc, 0x19, 0x48, 0x5c, 0xf9,
	0x1f, 0xe0, 0x2f, 0xe0, 0x84, 0x66, 0x3c, 0x76, 0xec, 0xc4, 0x55, 0xb3, 0xf1, 0x86, 0x72, 0x5a,
	0xcf, 0x78, 0xfd, 0xbd, 0x6f, 0xbe, 0xf7, 0xcd, 0x7b, 0x33, 0x81, 0x82, 0xa3, 0xe9, 0x1e, 0x55,
	0x1c, 0xd7, 0xf6, 0x6c, 0xf4, 0xaa, 0x6e, 0x8f, 0x94, 0xc1, 0x58, 0xfb, 0x9c, 0x98, 0x8a, 0xa3,
	0x69, 0x54, 0xd1, 0x29, 0x51, 0x28, 0x71, 0x4f, 0x4d, 0x9d, 0xb8, 0xa4, 0x6f, 0x52, 0xcf, 0x9d,
	0x28, 0x9a, 0x63, 0xe2, 0x03, 0x28, 0xb4, 0x35, 0xd7, 0x33, 0x75, 0xd3, 0xd1, 0x2c, 0x0f, 0x6d,
	0x80, 0x6c, 0x1a, 0x25, 0x69, 0x4b, 0xba, 0x99, 0x53, 0x65, 0xd3, 0x40, 0xd7, 0x20, 0xa7, 0x39,
	0x4e, 0xc3, 0x28, 0xc9, 0x5b, 0xd2, 0xcd, 0x4b, 0xaa, 0x3f, 0x40, 0x5b, 0x50, 0x10, 0x58, 0x2d,
	0x6d, 0x44, 0x4a, 0x19, 0xfe, 0x2e, 0x3a, 0x85, 0xbf, 0x00, 0x14, 0x81, 0x7d, 0x40, 0x5c, 0x6a,
	0xda, 0xd6, 0x1c, 0xfa, 0x75, 0x58, 0xb3, 0xc6, 0xa3, 0x1e, 0x71, 0x05, 0xbc, 0x18, 0xa1, 0x97,
	0xe0, 0xb2, 0x33, 0xfd, 0xba, 0x61, 0xf0, 0x08, 0x39, 0x35, 0x3e, 0xc9, 0xb8, 0xd9, 0xae, 0x41,
	0xdc, 0x52, 0x96, 0xbf, 0xf5, 0x07, 0xf8, 0x17, 0x09, 0xb2, 0x6d, 0x4d, 0x9f, 0x5f, 0xca, 0x5b,
	0xf0, 0x9c, 0x6e, 0x5b, 0x74, 0x3c, 0x22, 0x6e, 0x3b, 0x06, 0x2e, 0xf3, 0x7f, 0x49, 0x7e, 0xc9,
	0xbe, 0x72, 0x5c, 0xfb, 0xd4, 0x34, 0x66, 0xbf, 0xf2, 0x29, 0x25, 0xbf, 0x44, 0x45, 0xc8, 0xd0,
	0x81, 0xc6, 0x89, 0xad, 0xab, 0xec, 0x11, 0x95, 0xe0, 0xa2, 0x6e, 0x5b, 0x1e, 0xb1, 0xbc, 0x52,
	0x8e, 0xcf, 0x06, 0x43, 0xfc, 0xbd, 0x04, 0x9b, 0x8c, 0x70, 0x7b, 0xdc, 0x1b, 0x9a, 0xba, 0xe6,
	0x25, 0x09, 0x55, 0x81, 0x6b, 0xce, 0x9c, 0x9c, 0x21, 0xf5, 0xc4, 0x77, 0x4c, 0x5c, 0xe6, 0x88,
	0x90, 0xaa, 0x18, 0xcd, 0x8b, 0x9b, 0x4d, 0x10, 0x17, 0xef, 0x41, 0xa6, 0xab, 0xf5, 0x11, 0x82,
	0xac, 0xc5, 0x52, 0x2c, 0xf1, 0xfc, 0xf0, 0xe7, 0x65, 0xc8, 0x60, 0x07, 0xd0, 0x8e, 0x6b, 0x9f,
	0x10, 0xb7, 0xda, 0x6e, 0x34, 0xac, 0x63, 0xbb, 0x6e, 0x79, 0xee, 0x84, 0xa1, 0x0f, 0x5c, 0x72,
	0x1c, 0xa0, 0xb3, 0xe7, 0x30, 0xa2, 0x1c, 0x89, 0x78, 0x0d, 0x72, 0x9e, 0xe9, 0x0d, 0x03, 0xa7,
	0xf9, 0x03, 0xf4, 0x22, 0x5c, 0xf2, 0xc8, 0xc8, 0x19, 0x6a, 0x1e, 0xf1, 0x17, 0x91, 0x57, 0xa7,
	0x13, 0x78, 0x0f, 0xae, 0xec, 0x68, 0x94, 0xf8, 0x51, 0x55, 0xf2, 0x68, 0x4c, 0xa8, 0xc7, 0x8c,
	0x3b, 0xb0, 0xa9, 0x57, 0x35, 0x0c, 0x97, 0x50, 0x2a, 0xe2, 0x46, 0xa7, 0x98, 0x6a, 0x54, 0x1f,
	0x90, 0x90, 0x80, 0x18, 0xe1, 0x3f, 0x25, 0x40, 0x3c, 0x43, 0x74, 0xc0, 0x92, 0x15, 0x00, 0xde,
	0x00, 0x08, 0x1c, 0xd0, 0x30, 0x04, 0x5e, 0x64, 0x86, 0xbd, 0x0f, 0x7c, 0x15, 0x6e, 0xa2, 0xc8,
	0x0c, 0xb3, 0xc5, 0xa9, 0x2f, 0x92, 0x58, 0x5b, 0x30, 0x64, 0x3a, 0xb0, 0x84, 0x09, 0x0f, 0xf1,
	0x67, 0xd4, 0x85, 0x8b, 0x3d, 0x8d, 0x92, 0x03, 0x77, 0xc8, 0x4d, 0x54, 0xa8, 0xdc, 0x56, 0x16,
	0xdc, 0xe7, 0xca, 0x9c, 0x16, 0x6a, 0x00, 0x85, 0xff, 0x92, 0xe1, 0xfa, 0x2e, 0xf1, 0x22, 0x0e,
	0xa6, 0xc1, 0xf2, 0x28, 0xac, 0xb3, 0x74, 0x4e, 0x54, 0xf2, 0xa8, 0x3b, 0x71, 0x7c, 0x1b, 0x6c,
	0x54, 0xf6, 0x17, 0x8e, 0x9a, 0x0c, 0xab, 0x44, 0xe6, 0x18, 0xac, 0x1a, 0x0b, 0x32, 0x6f, 0x50,
	0x5f, 0xb6, 0x99, 0xdd, 0x7f, 0x08, 0xd0, 0xe3, 0xeb, 0x61, 0x76, 0xe2, 0xe2, 0xa5, 0x93, 0x23,
	0x82, 0x86, 0x0f, 0xd9, 0x8e, 0x8c, 0x51, 0x44, 0x9b, 0x50, 0xa8, 0x36, 0x9b, 0x47, 0xed, 0xaa,
	0xda, 0x6d, 0xd4, 0x3b, 0xc5, 0x0b, 0xa8, 0x08, 0xeb, 0x9d, 0x46, 0x6b, 0xb7, 0x59, 0xe7, 0x73,
	0x0f, 0x8b, 0x12, 0x9b, 0x69, 0x56, 0xbb, 0xf5, 0x4e, 0x57, 0xcc, 0xc8, 0x08, 0xc1, 0xc6, 0x83,
	0xba, 0xda, 0x69, 0xec, 0xb7, 0x3a, 0x62, 0x2e, 0x83, 0x7f, 0x94, 0x20, 0xaf, 0x12, 0xea, 0xd8,
	0x16, 0x25, 0xe8, 0x1e, 0x64, 0x75, 0xdb, 0x08, 0x74, 0xbd, 0xb5, 0x30, 0xfd, 0x00, 0x40, 0xa9,
	0xd9, 0x06, 0x51, 0x39, 0x06, 0xb3, 0xd2, 0x88, 0x50, 0xaa, 0xf5, 0x03, 0xeb, 0x06, 0x43, 0xfc,
	0x1a, 0x64, 0xd9, 0xff, 0xa1, 0x02, 0x5c, 0x3c, 0x68, 0xdd, 0x6f, 0xed, 0x7f, 0xd4, 0x2a, 0x5e,
	0x60, 0x83, 0xce, 0x41, 0xad, 0x56, 0xef, 0x74, 0x8a, 0x12, 0xca, 0x43, 0xf6, 0x6e, 0xb5, 0xd1,
	0x2c, 0xca, 0xd8, 0x80, 0xab, 0x31, 0x9b, 0x0b, 0xa2, 0x7b, 0x90, 0x77, 0xc5, 0x33, 0x27, 0x5b,
	0xa8, 0xbc, 0x71, 0x66, 0xb2, 0x6a, 0x08, 0x81, 0xb7, 0xa1, 0xbc, 0x4b, 0xbc, 0xea, 0x70, 0xd8,
	0x0e, 0xcb, 0xa7, 0x3e, 0x75, 0xdd, 0x53, 0x36, 0x15, 0xbe, 0x05, 0xeb, 0xb5, 0x60, 0x0b, 0x59,
	0xc7, 0xf6, 0xa2, 0x65, 0x04, 0x77, 0x21, 0xd7, 0x34, 0xad, 0x13, 0x8a, 0xee, 0x43, 0x8e, 0x37,
	0xcb, 0x92, 0xb4, 0x95, 0xb9, 0x59, 0xa8, 0xbc, 0xbd, 0xf0, 0x52, 0xa2, 0x61, 0x55, 0x1f, 0x03,
	0x3f, 0x96, 0xa1, 0xec, 0x5b, 0x89, 0x79, 0x66, 0x22, 0x6a, 0x5e, 0xa8, 0xdc, 0xb4, 0xc7, 0x49,
	0xb1, 0x1e, 0x47, 0x60, 0xed, 0x68, 0xc8, 0xd8, 0x94, 0x64, 0x4e, 0xa2, 0xb5, 0xb8, 0x77, 0x9f,
	0x18, 0x4c, 0xe1, 0xcb, 0xe3, 0xb5, 0x55, 0xf5, 0x97, 0x5a, 0x1e, 0x03, 0x4c, 0x27, 0x59, 0x5f,
	0x3a, 0x21, 0x13, 0xc1, 0x84, 0x3d, 0xa2, 0x0f, 0x21, 0x77, 0xaa, 0x0d, 0xc7, 0xbe, 0x50, 0x85,
	0xca, 0x9d, 0x33, 0xb2, 0x88, 0x96, 0x73, 0xd5, 0x47, 0xba, 0x2d, 0xbf, 0x23, 0xe1, 0x2f, 0xe1,
	0x85, 0x08, 0xcd, 0xfa, 0xa8, 0x47, 0x0c, 0x83, 0x18, 0x82, 0x2e, 0x45, 0x47, 0x90, 0x17, 0x75,
	0x2e, 0xc8, 0x41, 0xed, 0x1c, 0x96, 0xaf, 0x86, 0xa0, 0xf8, 0xef, 0x0c, 0x5c, 0x8d, 0x6c, 0xe1,
	0x30, 0x1b, 0x49, 0xfd, 0xec, 0xd3, 0x99, 0x4c, 0xec, 0x2e, 0x4c, 0x25, 0x21, 0xc2, 0x7c, 0x0a,
	0x50, 0x1f, 0x2e, 0x1d, 0x11, 0xa1, 0x40, 0x29, 0xc3, 0x43, 0xdc, 0x4b, 0x15, 0x22, 0x90, 0xd3,
	0x8f, 0x92, 0x0f, 0x86, 0xcf, 0x28, 0xd7, 0xe5, 0xaf, 0x24, 0xb8, 0x1c, 0xa3, 0x94, 0x10, 0xfa,
	0x61, 0x3c, 0xf4, 0xb9, 0x64, 0x3b, 0x62, 0xb7, 0xdf, 0x25, 0x28, 0x45, 0x1b, 0x4d, 0x67, 0x3c,
	0x1a, 0x69, 0xee, 0xc4, 0xd7, 0x7f, 0x1f, 0xb2, 0x94, 0x0c, 0x8f, 0x45, 0xdd, 0x4a, 0xb5, 0x6a,
	0x0e, 0x84, 0x8e, 0xfc, 0xae, 0x18, 0x04, 0x13, 0xb6, 0x49, 0x05, 0x1c, 0x03, 0xc4, 0x7f, 0x48,
	0xb3, 0x1d, 0x79, 0x45, 0x85, 0x18, 0x1d, 0xc3, 0x66, 0xb4, 0xad, 0xb2, 0x56, 0xea, 0x67, 0x68,
	0x3b, 0x8d, 0x43, 0xd5, 0x59, 0x50, 0xfc, 0xb3, 0x0c, 0xcf, 0xcf, 0x1d, 0x06, 0x56, 0xb3, 0xa4,
	0xcf, 0x12, 0xb3, 0x93, 0x6e, 0x3d, 0x31, 0x44, 0xf4, 0x71, 0x58, 0x30, 0xfc, 0x63, 0x47, 0x75,
	0x19, 0xec, 0x98, 0x47, 0x45, 0xa9, 0xc0, 0xbf, 0x65, 0xe0, 0x46, 0x5c, 0xa6, 0xa0, 0x64, 0xae,
	0x4a, 0x2d, 0x2d, 0x5a, 0x9c, 0xfc, 0xd4, 0xbf, 0xbf, 0xcc, 0xe6, 0x9c, 0x2d, 0xf1, 0xd3, 0xb2,
	0x84, 0xcc, 0x88, 0x5c, 0x2c, 0x15, 0xea, 0x92, 0xc7, 0xc7, 0x59, 0x29, 0xfe, 0x3f, 0xdd, 0xee,
	0x57, 0xe9, 0x09, 0xe7, 0x99, 0x95, 0xa4, 0xac, 0x1e, 0xe9, 0x57, 0x0c, 0x4c, 0x59, 0x18, 0x2c,
	0xe6, 0xb5, 0xaf, 0x25, 0x78, 0x99, 0x09, 0x2c, 0x18, 0x07, 0x47, 0x1b, 0xa1, 0xf2, 0x7f, 0x72,
	0xc9, 0xc1, 0xdf, 0x4a, 0xf0, 0xca, 0xd3, 0x38, 0xac, 0xc6, 0xf7, 0xc1, 0xf5, 0x4a, 0x9e, 0x5e,
	0xaf, 0xf0, 0x77, 0x99, 0xe0, 0x96, 0xfa, 0x81, 0x3d, 0x22, 0xab, 0x8a, 0xfc, 0xc9, 0xcc, 0x71,
	0xe3, 0xee, 0x19, 0x4d, 0x18, 0xe5, 0x96, 0x70, 0xda, 0xe8, 0xc0, 0x9a, 0x3e, 0x76, 0x4d, 0x12,
	0xec, 0xb6, 0x54, 0x1e, 0x17, 0x50, 0xcf, 0x68, 0x5f, 0x55, 0xfe, 0xc9, 0xc1, 0x15, 0xff, 0x3f,
	0x3a, 0xfe, 0xb7, 0x35, 0xcf, 0x1d, 0xa2, 0x6f, 0x24, 0xb8, 0xdc, 0x27, 0xde, 0x54, 0x0d, 0x94,
	0xe2, 0xde, 0x57, 0xbe, 0x93, 0x42, 0x7e, 0x46, 0xa5, 0xe0, 0x4c, 0xaf, 0x4b, 0x68, 0x71, 0xb0,
	0xf9, 0xdf, 0x12, 0xca, 0xdb, 0xcb, 0x7d, 0x2c, 0xa8, 0x3c, 0x96, 0x60, 0xa3, 0x1f, 0xab, 0x97,
	0xe8, 0xdd, 0x94, 0xf7, 0xf4, 0xf2, 0xb2, 0x00, 0x21, 0xa9, 0x1f, 0x24, 0xd8, 0x8c, 0x93, 0xa2,
	0xe9, 0x59, 0xbd, 0xb7, 0x3c, 0x80, 0xa0, 0xf5, 0x93, 0x04, 0xd7, 0xfb, 0x89, 0xbd, 0x25, 0x3d,
	0xbb, 0xdd, 0x73, 0xea, 0x6e, 0x3b, 0xaf, 0xc3, 0xa2, 0x3f, 0xe2, 0x1e, 0xe6, 0xf8, 0x8f, 0xbe,
	0xbd, 0x35, 0xfe, 0xe7, 0xcd, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x32, 0x89, 0x4a, 0x6b, 0x0a,
	0x16, 0x00, 0x00,
}
*/
